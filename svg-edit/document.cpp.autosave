#include "document.h"

#include <QFileInfo>
#include <QFile>
#include <QXmlSimpleReader>
#include <QXmlInputSource>

#include <QGraphicsSvgItem>
#include <QString>
#include <QTemporaryFile>

#include <QDomDocument>

#include <QDebug>


QString Document::operationResultString(const DocumentOperationResult result) {

    static const QMap<DocumentOperationResult, QString> stringsByResult{
    { DocumentOperationResult::Success,        QString("Success")},
    { DocumentOperationResult::FileNotFound,   QString("FileNotFound")},
    { DocumentOperationResult::FileOpenFailed, QString("FileOpenFailed")},
    { DocumentOperationResult::XmlParseFailed, QString("XmlParseFailed")}};

    return stringsByResult[result];
}


Document::Document()
{
}

DocumentOperationResult Document::load(const QString & file)
{
    const auto fileInfo = QFileInfo(file);
    if(!fileInfo.exists() || !fileInfo.isFile()) {
        return DocumentOperationResult::FileNotFound;
    }

    QScopedPointer<QFile> svgFile(new QFile(file));
    svgFile->open(QIODevice::ReadOnly | QIODevice::Text);
    if(!svgFile->isOpen()) {
        return DocumentOperationResult::FileOpenFailed;
    }

    QXmlSimpleReader xmlReader;
    QScopedPointer<QXmlInputSource> xmlInput(new QXmlInputSource(svgFile.get()));
    if(!xmlReader.parse(xmlInput.get())) {
        return DocumentOperationResult::XmlParseFailed;
    }

    qDebug() << svgFile.da
    
    svgFile->close();
    return DocumentOperationResult::Success;
}

bool Document::setNodeContent(const QString & content)
{
    if(m_nodeContent == content) {
        return true;
    }

    m_nodeContent = content;
    auto document = QDomDocument();


    if(m_tempFile.isNull()) {
        m_tempFile.reset(new QTemporaryFile());
    }
    m_tempFile->write(document.toString().toUtf8());
    qDebug() << m_tempFile->fileName();

    return true;
}

const QString & Document::nodeContent() const
{
    return QString("moep");
}



/*const QGraphicsSvgItem * Resource::graphicsItem() const
{
    if(m_graphicsItem.isNull()) {
        m_graphicsItem.reset(new QGraphicsSvgItem(m_fileInfo->filePath()));
    }
    return m_graphicsItem.get();
}*/
